// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// sample_problem
Rcpp::NumericMatrix sample_problem();
RcppExport SEXP _marlin_sample_problem() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sample_problem());
    return rcpp_result_gen;
END_RCPP
}
// sim_fish_pop
List sim_fish_pop(const NumericVector length_at_age, const NumericVector weight_at_age, const NumericVector maturity_at_age, const NumericMatrix f_p_a, const Eigen::MatrixXd movement, const Rcpp::NumericMatrix last_n_p_a, const int patches, const int burn_steps, const double steepness, const double r0, double ssb0, const double m, bool tune_unfished);
RcppExport SEXP _marlin_sim_fish_pop(SEXP length_at_ageSEXP, SEXP weight_at_ageSEXP, SEXP maturity_at_ageSEXP, SEXP f_p_aSEXP, SEXP movementSEXP, SEXP last_n_p_aSEXP, SEXP patchesSEXP, SEXP burn_stepsSEXP, SEXP steepnessSEXP, SEXP r0SEXP, SEXP ssb0SEXP, SEXP mSEXP, SEXP tune_unfishedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type length_at_age(length_at_ageSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type weight_at_age(weight_at_ageSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type maturity_at_age(maturity_at_ageSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type f_p_a(f_p_aSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type movement(movementSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type last_n_p_a(last_n_p_aSEXP);
    Rcpp::traits::input_parameter< const int >::type patches(patchesSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_steps(burn_stepsSEXP);
    Rcpp::traits::input_parameter< const double >::type steepness(steepnessSEXP);
    Rcpp::traits::input_parameter< const double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< double >::type ssb0(ssb0SEXP);
    Rcpp::traits::input_parameter< const double >::type m(mSEXP);
    Rcpp::traits::input_parameter< bool >::type tune_unfished(tune_unfishedSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_fish_pop(length_at_age, weight_at_age, maturity_at_age, f_p_a, movement, last_n_p_a, patches, burn_steps, steepness, r0, ssb0, m, tune_unfished));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_marlin_sample_problem", (DL_FUNC) &_marlin_sample_problem, 0},
    {"_marlin_sim_fish_pop", (DL_FUNC) &_marlin_sim_fish_pop, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_marlin(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
