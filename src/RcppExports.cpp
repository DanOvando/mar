// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// sample_problem
Rcpp::NumericMatrix sample_problem();
RcppExport SEXP _mar_sample_problem() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sample_problem());
    return rcpp_result_gen;
END_RCPP
}
// fish_model
Rcpp::NumericMatrix fish_model(const Eigen::VectorXd length_at_age, const Eigen::VectorXd weight_at_age, const Eigen::VectorXd maturity_at_age, const Eigen::MatrixXd movement, Eigen::MatrixXd n_p_a, const int patches, const int sim_steps, const int burn_steps, const double steepness, const double r0, const double m);
RcppExport SEXP _mar_fish_model(SEXP length_at_ageSEXP, SEXP weight_at_ageSEXP, SEXP maturity_at_ageSEXP, SEXP movementSEXP, SEXP n_p_aSEXP, SEXP patchesSEXP, SEXP sim_stepsSEXP, SEXP burn_stepsSEXP, SEXP steepnessSEXP, SEXP r0SEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type length_at_age(length_at_ageSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type weight_at_age(weight_at_ageSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type maturity_at_age(maturity_at_ageSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type movement(movementSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type n_p_a(n_p_aSEXP);
    Rcpp::traits::input_parameter< const int >::type patches(patchesSEXP);
    Rcpp::traits::input_parameter< const int >::type sim_steps(sim_stepsSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_steps(burn_stepsSEXP);
    Rcpp::traits::input_parameter< const double >::type steepness(steepnessSEXP);
    Rcpp::traits::input_parameter< const double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< const double >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(fish_model(length_at_age, weight_at_age, maturity_at_age, movement, n_p_a, patches, sim_steps, burn_steps, steepness, r0, m));
    return rcpp_result_gen;
END_RCPP
}
// popmodel
List popmodel(NumericVector length_at_age, NumericVector weight_at_age, NumericVector maturity_at_age, NumericVector selectivity_at_age, NumericVector rec_devs, NumericVector age_vector, int sim_years, int n_ages, int burn_years, int rec_form, double steepness, double r0, double m, double f);
RcppExport SEXP _mar_popmodel(SEXP length_at_ageSEXP, SEXP weight_at_ageSEXP, SEXP maturity_at_ageSEXP, SEXP selectivity_at_ageSEXP, SEXP rec_devsSEXP, SEXP age_vectorSEXP, SEXP sim_yearsSEXP, SEXP n_agesSEXP, SEXP burn_yearsSEXP, SEXP rec_formSEXP, SEXP steepnessSEXP, SEXP r0SEXP, SEXP mSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type length_at_age(length_at_ageSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight_at_age(weight_at_ageSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maturity_at_age(maturity_at_ageSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type selectivity_at_age(selectivity_at_ageSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rec_devs(rec_devsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type age_vector(age_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type sim_years(sim_yearsSEXP);
    Rcpp::traits::input_parameter< int >::type n_ages(n_agesSEXP);
    Rcpp::traits::input_parameter< int >::type burn_years(burn_yearsSEXP);
    Rcpp::traits::input_parameter< int >::type rec_form(rec_formSEXP);
    Rcpp::traits::input_parameter< double >::type steepness(steepnessSEXP);
    Rcpp::traits::input_parameter< double >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(popmodel(length_at_age, weight_at_age, maturity_at_age, selectivity_at_age, rec_devs, age_vector, sim_years, n_ages, burn_years, rec_form, steepness, r0, m, f));
    return rcpp_result_gen;
END_RCPP
}
// move_matrix_eigen
Eigen::MatrixXd move_matrix_eigen(Eigen::MatrixXd X, Eigen::MatrixXd y, int its);
RcppExport SEXP _mar_move_matrix_eigen(SEXP XSEXP, SEXP ySEXP, SEXP itsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type its(itsSEXP);
    rcpp_result_gen = Rcpp::wrap(move_matrix_eigen(X, y, its));
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _mar_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mar_sample_problem", (DL_FUNC) &_mar_sample_problem, 0},
    {"_mar_fish_model", (DL_FUNC) &_mar_fish_model, 11},
    {"_mar_popmodel", (DL_FUNC) &_mar_popmodel, 14},
    {"_mar_move_matrix_eigen", (DL_FUNC) &_mar_move_matrix_eigen, 3},
    {"_mar_timesTwo", (DL_FUNC) &_mar_timesTwo, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
